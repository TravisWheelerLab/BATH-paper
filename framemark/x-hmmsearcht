#! /usr/bin/perl 

# Run a framemark benchmark with hmmsearcht.
# 
# Usage:      x-hmmsearcht <execdir> <scriptdir> <outdir> <outname> <queryfile> <posfile> <fafile> <cpus> <e-max>
# # Example:  /home/user/FraHMMER-paper/framemark/x-hmmsearcht /home/user/hmmer/src /home/user/FraHMMER-paper/framemark  /home/user/framemark-results  framemark-00fs /home/user/framemark-files/framemark-00fs.hmm /home/user/framemark-files/framemark-00fs.pos /home/user/framemark-files/framemark-00fs.fa 16 100
#

use Time::HiRes;

$usage = "Usages: $0 [options]\n\t<execdir>\n\t<scriptdir>\n\t<outdir>\n\t<outname>\n\t<queryfile>\n\t<posfile>\n\t<targetfile>\n\t<cpus>\n\t<e-max>\n";

if(scalar(@ARGV) != 9) { printf("$usage\n"); exit(1); }

($execdir, $scriptdir, $outdir, $outname, $queryfile, $posfile, $targetfile, $cpus, $emax) = @ARGV;
$outfile        = $outname . ".out";
$tmpoutfile     = $outfile . ".tmp";
$sorttmpoutfile = $outfile . ".tmp.sort";

$idscript   = "$scriptdir/framemark-idpositives.pl";
$hmmsearcht = "$execdir/hmmsearcht";

if (! -d $execdir)           { die "didn't find executable directory $execdir"; }
if (! -d $scriptdir)         { die "didn't find script directory $scriptdir"; }
if (! -x $hmmsearcht)        { die "didn't find executable $hmmsearcht"; }
if (! -e $outdir)            { die "$outdir doesn't exist"; }
if (! -e $posfile)           { die "$posfile doesn't exist"; }
if (! -e $idscript)          { die "positive identification script $idscript doesn't exist"; }



$runtime = -1 * Time::HiRes::time();

#run hmmsearcht
$command = "$hmmsearcht --cpu $cpus -E $emax --domE $emax -o $outdir/$outname.search --domtblout $outdir/$outname.tmp $queryfile $targetfile";
$status = system("$command");
if ($status != 0) { die "FAILED: $command"; }

$runtime += Time::HiRes::time();

open(TMPOUTFILE,">$outdir/$tmpoutfile") || die "failed to open $tmpoutfile";
open(OUTPUT, "$outdir/$outname.tmp") || die "FAILED: to open $outdir/$outname.tmp tabular output file";
my $query;

while (<OUTPUT>)
{
    if (/^\#/) { next; }
    @fields   = split(' ', $_, 21);
    $target      = $fields[0];
    $query       = (split('\.', $fields[3]))[1];
    $target_from = $fields[17];
    $target_to   = $fields[18];
    $pval        = $fields[12];
    $bitscore    = $fields[13];
    printf TMPOUTFILE "%10g %10.1f %10d %10d %20s %35s\n", $pval, $bitscore, $target_from, $target_to, $target, $query;
}

open(TIME, ">" . "$outdir/$outname.time");
printf TIME ("$outname %.2f seconds\n", $runtime);
close(TIME);

close TMPOUTFILE;
close OUTPUT;

$command = "sort -g $outdir/$tmpoutfile > $outdir/$sorttmpoutfile";
$status = system("$command");
if ($status != 0) { die "FAILED: $command"; }

$command = "perl $idscript $posfile $outdir/$sorttmpoutfile > $outdir/$outfile";
$status = system("$command");
if ($status != 0) { die "FAILED: $command"; }


#! /usr/bin/perl 

# Run a transmark benchmark with nhmmer.
#
# Usage:      x-nhmmer <execdir> <scriptdir> <outdir> <outname> <queryfile> <posfile> <fafile> <cpus> <e-max>
# Example:  /home/user/BATH-paper/transmark/x-nhmmer /home/user/hmmer/src /home/user/BATH-paper/transmark  /home/user/transmark-results  transmark-00fs /home/user/transmark-files/transmark-00fs.DNA.hmm /home/user/transmark-files/transmark-00fs.pos /home/user/transmark-files/transmark-00fs.fa 16 100
#

use Time::HiRes;

$usage = "Usages: $0 \n\t<execdir>\n\t<scriptdir>\n\t<outdir>\n\t<outname>\n\t<queryfile>\n\t<posfile>\n\t<targetfile>\n\t<cpus>\n\t<e-max>\n";
if(scalar(@ARGV) != 9) { printf("$usage\n"); exit(1); }

($execdir, $scriptdir, $outdir, $outname, $queryfile, $posfile, $targetfile, $cpus, $emax) = @ARGV;
$outfile        = $outname . ".out";
$tmpoutfile     = $outfile . ".tmp";
$sorttmpoutfile = $outfile . ".tmp.sort";

$idscript    = "$scriptdir/transmark-idpositives.pl";
$nhmmer      = "$execdir/nhmmer";


if (! -d $execdir)                                      { die "didn't find executable directory $execdir"; }
if (! -d $scriptdir)                                    { die "didn't find script directory $scriptdir"; }
if (! -x $nhmmer)                                       { die "didn't find executable $nhmmer"; }
if (! -e $outdir)                                       { die "$outdir doesn't exist"; }
if (! -e $posfile)                                      { die "$posfile doesn't exist"; }
if (! -e $idscript)                                     { die "positive identification script $idscript doesn't exist"; }


open(TMPOUTFILE,">$outdir/$tmpoutfile") || die "failed to open $tmpoutfile";

$runtime = -1 * Time::HiRes::time();

#run nhmmer
$command = "$nhmmer --cpu $cpus -E $emax -o $outdir/$outname.search --tblout $outdir/$outname.tmp $queryfile $targetfile";
$status = system("$command");
if ($status != 0) { die "FAILED: $command"; }

$runtime += Time::HiRes::time();

open(OUTPUT, "$outdir/$outname.tmp") || die "FAILED: to open $outdir/$outname.tmp tabular output file";
my $query;
while (<OUTPUT>)
{
    if (/^\#/) { next; }
    @fields      = split(' ', $_, 16);
    $query       = (split(/\./, $fields[2]))[1];
    $target      = $fields[0];
    $target_from = $fields[6];
    $target_to   = $fields[7];
    $pval        = $fields[12];
    $bitscore    = $fields[13];
    printf TMPOUTFILE "%10g %10.1f %10d %10d %20s %35s\n", $pval, $bitscore, $target_from, $target_to, $target, $query;
}

open(TIME, ">" . "$outdir/$outname.time");
printf TIME ("$outname %.2f seconds\n", $runtime);
close(TIME);

close TMPOUTFILE;
close OUTPUT;

$command = "sort -g $outdir/$tmpoutfile > $outdir/$sorttmpoutfile";
$status = system("$command");
if ($status != 0) { die "FAILED: $command"; }

$command = "perl $idscript $posfile $outdir/$sorttmpoutfile > $outdir/$outfile";
$status = system("$command");
if ($status != 0) { die "FAILED: $command"; }

